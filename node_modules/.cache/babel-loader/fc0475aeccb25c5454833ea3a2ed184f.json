{"ast":null,"code":"import DISHES from \"../data/dishes\";\nimport COMMENTS from \"../data/comments\";\nimport { combineReducers } from 'redux';\nimport * as actionTypes from './ActionTypes'; // const initialState = {\n//     dishes: DISHES,\n//     comments: COMMENTS,\n//\n// }\n//\n// export const Reducer = (state=initialState,action)=>{\n//      if(action.type===\"ADD_COMMENT\"){\n//           const newComment = action.payload\n//           newComment.id = state.comments.length\n//           newComment.date= new Date().toDateString()\n//          console.log(newComment)\n//          return {\n//              ...state,\n//              comments: state.comments.concat(newComment)\n//          }\n//      }\n//     return state\n// }\n// const dishReducer = (dishState= DISHES, action)=>{\n//     return dishState\n// }\n//\n//  const CommentReducer = (commentState=COMMENTS,action)=>{\n//      if(action.type===\"ADD_COMMENT\"){\n//           const newComment = action.payload\n//           newComment.id = commentState.length\n//           newComment.date= new Date().toDateString()\n//          console.log(newComment)\n//          return  commentState.concat(newComment)\n//      }\n//     return commentState\n// }\n//\n// export const Reducer = combineReducers({\n//     dishes: dishReducer,\n//     comments: CommentReducer\n// })\n\nconst dishReducer = (dishState = DISHES, action) => {\n  return dishState;\n};\n\nconst CommentReducer = (commentState = COMMENTS, action) => {\n  switch (actionTypes) {\n    case actionTypes.ADD_COMMENT:\n      const newComment = action.payload;\n      newComment.id = commentState.length;\n      newComment.date = new Date().toDateString();\n      console.log(newComment);\n      return commentState.concat(newComment);\n\n    default:\n      return commentState;\n  }\n};\n\nexport const Reducer = combineReducers({\n  dishes: dishReducer,\n  comments: CommentReducer\n});","map":{"version":3,"sources":["D:/Bohubrihi/restaurant-project/src/redux/Reducer.js"],"names":["DISHES","COMMENTS","combineReducers","actionTypes","dishReducer","dishState","action","CommentReducer","commentState","ADD_COMMENT","newComment","payload","id","length","date","Date","toDateString","console","log","concat","Reducer","dishes","comments"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,eAAR,QAA8B,OAA9B;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACC,SAAS,GAAEL,MAAZ,EAAoBM,MAApB,KAA6B;AAC7C,SAAOD,SAAP;AACH,CAFD;;AAIC,MAAME,cAAc,GAAG,CAACC,YAAY,GAACP,QAAd,EAAuBK,MAAvB,KAAgC;AACpD,UAAQH,WAAR;AAEI,SAAKA,WAAW,CAACM,WAAjB;AACI,YAAMC,UAAU,GAAGJ,MAAM,CAACK,OAA1B;AACAD,MAAAA,UAAU,CAACE,EAAX,GAAgBJ,YAAY,CAACK,MAA7B;AACAH,MAAAA,UAAU,CAACI,IAAX,GAAiB,IAAIC,IAAJ,GAAWC,YAAX,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACA,aAAQF,YAAY,CAACW,MAAb,CAAoBT,UAApB,CAAR;;AACJ;AACI,aAAOF,YAAP;AATR;AAYH,CAbA;;AAeD,OAAO,MAAMY,OAAO,GAAGlB,eAAe,CAAC;AACnCmB,EAAAA,MAAM,EAAEjB,WAD2B;AAEnCkB,EAAAA,QAAQ,EAAEf;AAFyB,CAAD,CAA/B","sourcesContent":["import DISHES from \"../data/dishes\";\r\nimport COMMENTS from \"../data/comments\";\r\nimport {combineReducers} from 'redux'\r\nimport * as actionTypes from './ActionTypes'\r\n\r\n// const initialState = {\r\n//     dishes: DISHES,\r\n//     comments: COMMENTS,\r\n//\r\n// }\r\n//\r\n// export const Reducer = (state=initialState,action)=>{\r\n//      if(action.type===\"ADD_COMMENT\"){\r\n//           const newComment = action.payload\r\n//           newComment.id = state.comments.length\r\n//           newComment.date= new Date().toDateString()\r\n//          console.log(newComment)\r\n//          return {\r\n//              ...state,\r\n//              comments: state.comments.concat(newComment)\r\n//          }\r\n//      }\r\n//     return state\r\n// }\r\n\r\n// const dishReducer = (dishState= DISHES, action)=>{\r\n//     return dishState\r\n// }\r\n//\r\n//  const CommentReducer = (commentState=COMMENTS,action)=>{\r\n//      if(action.type===\"ADD_COMMENT\"){\r\n//           const newComment = action.payload\r\n//           newComment.id = commentState.length\r\n//           newComment.date= new Date().toDateString()\r\n//          console.log(newComment)\r\n//          return  commentState.concat(newComment)\r\n//      }\r\n//     return commentState\r\n// }\r\n//\r\n// export const Reducer = combineReducers({\r\n//     dishes: dishReducer,\r\n//     comments: CommentReducer\r\n// })\r\n\r\nconst dishReducer = (dishState= DISHES, action)=>{\r\n    return dishState\r\n}\r\n\r\n const CommentReducer = (commentState=COMMENTS,action)=>{\r\n    switch (actionTypes)\r\n    {\r\n        case actionTypes.ADD_COMMENT:\r\n            const newComment = action.payload\r\n            newComment.id = commentState.length\r\n            newComment.date= new Date().toDateString()\r\n            console.log(newComment)\r\n            return  commentState.concat(newComment)\r\n        default:\r\n            return commentState\r\n     }\r\n\r\n}\r\n\r\nexport const Reducer = combineReducers({\r\n    dishes: dishReducer,\r\n    comments: CommentReducer\r\n})"]},"metadata":{},"sourceType":"module"}